#!/bin/env bash

# Set default console keyboard
loadkeys fr-latin1

# Set font size
set_font_size() {
    echo "--- FOR BIGGER FONT SIZE TYE 'yes' OTHERWISE PRESS 'RETURN'"
    read -r answer
    if [ "$answer" = "yes" ]; then
        setfont ter-124b
    else
        echo "No changes have been made"
    fi
}

# Where everything begins
set_font_size

# Update system clock
timedatectl

# Edit Pacman configuration
vim /etc/pacman.conf

# Refresh package databases
pacman -Syy
sleep 1s

# Disk partitioning functions
gdisk_partition() {
    gdisk /dev/$disk<<EOF
o
Y
n


+1G
ef00
c
BOOT
n




c
2
ROOT
w
Y
EOF
}

fdisk_partition() {
fdisk /dev/$disk<<EOF
g
n
1

+1G
t
1
n



x
n
1
BOOT
n
2
ROOT
r
w
EOF
}

partition() {
    echo "--- THESE ARE YOUR DISKS ---"
    fdisk -l | grep "Disk" | grep "/dev/"
    echo "--- ENTER THE LAST 3 CHARACTERS OF THE DISK YOU WANNA USE"
    read -r disk

    echo "--- FOR CUSTOM PARTITIONING TYPE 'c'"
    echo "--- FOR AUTOMATED PARTITIONING TYPE 'a'"
    read -r partAnswer

    if [ "$partAnswer" = "a" ]; then
        echo "--- TYPE 'g' TO USE gdisk OR 'f' TO USE fdisk"
        read -r gORf
        if [ "$gORf" = "g" ]; then
            gdisk_partition
        elif [ "$gORf" = "f" ]; then
            fdisk_partition
        else
            partition
        fi
    elif [ "$partAnswer" = "c" ]; then
        echo "--- MANUAL PARTITIONING WITH cfdisk, gdisk, or fdisk (cf/g/f)"
        read -r custom
        case $custom in
            cf) cfdisk /dev/"$disk" ;;
            g) gdisk /dev/"$disk" ;;
            f) fdisk /dev/"$disk" ;;
            *) echo "--- WRONG ENTRY: TRY AGAIN"; partition ;;
        esac
    else
        echo "--- WRONG ENTRY: TRY AGAIN"
        partition
    fi
}

partition

# Format partitions
mkfs.vfat -F 32 -n BOOT /dev/"$disk"1
mkfs.btrfs -f -L ROOT /dev/"$disk"2


# Create btrfs subvolumes
mount /dev/"$disk"2 /mnt
cd /mnt
btrfs subvolume create @
btrfs subvolume create @home
cd
umount /mnt

# Mount subvolumes
mount -o rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,subvol=@ /dev/"$disk"2 /mnt
mkdir -p /mnt/{boot,home}
mount -o rw,noatime,compress=zstd:3,ssd,discard=async,space_cache=v2,subvol=@home /dev/"$disk"2 /mnt/home
mount /dev/"$disk"1 /mnt/boot

# Refresh package databases and install base system
pacman -Syy
sleep 2s
pacstrap -K /mnt base base-devel linux linux-firmware git nano neovim openssh reflector networkmanager iwd ufw rsync amd-ucode

# Generate fstab
genfstab -U /mnt >> /mnt/etc/fstab

# Get the PARTUUID of /dev/vda2
#diskid=$(blkid | grep "$disk"2 | cut -d '"' -f14)
#diskid=$(blkid | grep "$disk"2 | grep -o 'PARTUUID="[^"]*"' | cut -d '"' -f 2)
diskid=$(blkid | grep "$disk"2 | grep -o 'PARTUUID="[^"]*"' | sed 's/PARTUUID="//;s/"//')

# Create new user
echo "ENTER NEW USER NAME"
read -r userName

# Change user password
echo "ENTER USER PASSWD"
read -s -r passU

# Change root password
echo "ENTER ROOT PASSWD"
read -s -r passR

# Chroot and configure system
arch-chroot /mnt << EOF
pacman -Syyu
sleep 1s

ln -sf /usr/share/zoneinfo/Europe/Paris /etc/localtime
hwclock --systohc --localtime

reflector --country France,Germany --latest 5 --sort rate --save /etc/pacman.d/mirrorlist
pacman -Syy

nvim /etc/locale.gen
locale-gen

echo LANG=en_US.UTF-8 > /etc/locale.conf
echo KEYMAP=fr-latin1 > /etc/vconsole.conf
echo arch > /etc/hostname

cat <<EOT >> /etc/hosts
127.0.0.1   localhost
::1         localhost
127.0.1.1   arch.localdomain arch
EOT

bootctl install

cat <<EOT >> /boot/loader/loader.conf
default arch.conf
timeout 3
console-mode max
editor 0
EOT

cat <<EOT >> /boot/loader/entries/arch.conf
title   Arch Linux
linux   /vmlinuz-linux
initrd  /initramfs-linux.img
options root=PARTUUID=$diskid zswap.enabled=0 rootflags=subvol=@ rw rootfstype=btrfs
EOT

sleep 3s

cat <<EOT >> /boot/loader/entries/arch-fallback.conf
title   Arch Linux
linux   /vmlinuz-linux
initrd  /initramfs-linux-fallback.img
options root=PARTUUID=$diskid zswap.enabled=0 rootflags=subvol=@ rw rootfstype=btrfs
EOT

# Create zram swap
cat << 'EOT' > /etc/systemd/zram-generator.conf
[zram0]
zram-size = ram / 4
EOT

cat << 'EOT' > /etc/sysctl.d/99-vm-zram-parameters.conf
vm.swappiness = 180
vm.watermark_boost_factor = 0
vm.watermark_scale_factor = 125
vm.page-cluster = 0
EOT

cat /boot/loader/entries/arch.conf
sleep 3s
bootctl list

systemctl enable NetworkManager.service
systemctl enable sshd.service

sleep 2s

useradd -m -G nordvpn,libvirt,wheel,hiker $userName

echo "@includedir /etc/sudoers.d" >> /etc/sudoers
echo "$userName ALL=(ALL) ALL" >> /etc/sudoers.d/00_$userName

passwd <<EOT
$passR

$passR

EOT

passwd $userName <<EOT
$passU

$passU

EOT

EOF

# Create new user
#echo "ENTER NEW USER NAME"
#read userName
useradd -m -G nordvpn,libvirt,wheel,hiker $userName

echo "@includedir /etc/sudoers.d" >> /etc/sudoers
echo "$userName ALL=(ALL) ALL" >> /etc/sudoers.d/00_$userName

# Change root password
#echo "ENTER ROOT PASSWD"
#read -s -r passR
passwd <<EOT
$passR

$passR

EOT

# Change user password
#echo "ENTER USER PASSWD"
#read -s -r passU
passwd $userName <<EOT
$passU

$passU

EOT
